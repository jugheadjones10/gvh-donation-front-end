[{"/root/gvh-donation-front-end/src/index.js":"1","/root/gvh-donation-front-end/src/App.js":"2","/root/gvh-donation-front-end/src/reportWebVitals.js":"3","/root/gvh-donation-front-end/src/payment-methods/PaymentMethod.js":"4","/root/gvh-donation-front-end/src/form-components/FormComponents.js":"5","/root/gvh-donation-front-end/src/Preamble.js":"6","/root/gvh-donation-front-end/src/payment-methods/StyledComponents.js":"7","/root/gvh-donation-front-end/src/form-components/PDPA.js":"8","/root/gvh-donation-front-end/src/payment-methods/fieldConstants.js":"9","/root/gvh-donation-front-end/src/on-submit-components/OnPayNowSubmit.js":"10","/root/gvh-donation-front-end/src/on-submit-components/OnQRCodeSubmit.js":"11","/root/gvh-donation-front-end/src/on-submit-components/OnBankTransferSubmit.js":"12","/root/gvh-donation-front-end/src/on-submit-components/OnChequeSubmit.js":"13","/root/gvh-donation-front-end/src/on-submit-components/OnMonthlySubmit.js":"14","/root/gvh-donation-front-end/src/auction/Auction.js":"15","/root/gvh-donation-front-end/src/on-submit-components/stringConstants.js":"16"},{"size":1304,"mtime":1638945890657,"results":"17","hashOfConfig":"18"},{"size":9178,"mtime":1639898900667,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1623761545569,"results":"20","hashOfConfig":"18"},{"size":6214,"mtime":1639837531489,"results":"21","hashOfConfig":"18"},{"size":1922,"mtime":1639836937226,"results":"22","hashOfConfig":"18"},{"size":2186,"mtime":1639838903836,"results":"23","hashOfConfig":"18"},{"size":584,"mtime":1639787198535,"results":"24","hashOfConfig":"18"},{"size":803,"mtime":1639733735972,"results":"25","hashOfConfig":"18"},{"size":1919,"mtime":1639788177626,"results":"26","hashOfConfig":"18"},{"size":1659,"mtime":1639836234325,"results":"27","hashOfConfig":"18"},{"size":1365,"mtime":1639898887534,"results":"28","hashOfConfig":"18"},{"size":3428,"mtime":1639786969026,"results":"29","hashOfConfig":"18"},{"size":529,"mtime":1639786571133,"results":"30","hashOfConfig":"18"},{"size":2698,"mtime":1639787186906,"results":"31","hashOfConfig":"18"},{"size":9389,"mtime":1639901576257,"results":"32","hashOfConfig":"18"},{"size":223,"mtime":1639793966062,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"wjpy61",{"filePath":"37","messages":"38","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/root/gvh-donation-front-end/src/index.js",[],["78","79"],"/root/gvh-donation-front-end/src/App.js",["80","81","82","83","84","85","86","87","88","89","90","91"],"/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React, {useState, useEffect} from \"react\";\n\n//Components displayed on submission complete.\n// import OnPayNowSubmit from \"./payment-methods/OnPayNowSubmit\";\n// import OnQRCodeSubmit from \"./payment-methods/OnQRCodeSubmit\";\n\n//\"Higher level\" components that encapsulate functionality that is re-used for each payment type.\nimport PaymentMethod from \"./payment-methods/PaymentMethod.js\";\nimport { FormTextField } from \"./form-components/FormComponents.js\";\nimport { useTheme } from \"@mui/styles\";\n\n//MUI components\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport  Container  from '@mui/material/Container';\n\n//Stripe dependencies\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\n\nimport * as Yup from \"yup\";\nimport Preamble from \"./Preamble\";\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nfunction getClientSecret(amount) {\n  return fetch(\"http://165.22.241.81:8000/secret\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ amount: amount }),\n  })\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (responseJson) {\n      return responseJson.client_secret;\n    })\n    .catch((err) => alert(\"First steP\" + err));\n}\n\nfunction formSubmit(values){\n\n  const api =\n    process.env.NODE_ENV === \"development\"\n    ? process.env.REACT_APP_DEV_FORM_SUBMISSION\n    : process.env.REACT_APP_PROD_FORM_SUBMISSION\n\n  return fetch(api, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"text/html\",\n    },\n    body: JSON.stringify(values, null, 2),\n  })\n    .then((res) => res.text()) \n    .then((res) => {\n      return { refid: res }; \n    }); \n\n}\n\nfunction App() {\n  const stripe = useStripe();\n  const elements = useElements();\n  const theme = useTheme()\n\n\n\n  return (\n    //<div\n    // css={{\n    //   width: \"60%\",\n    //   margin: \"auto\",\n    // }}\n    //>\n      <Container maxWidth=\"md\" css={{padding: theme.spacing(3)}}>\n        <Preamble />\n\n        <PaymentMethod method=\"paynow\" post={formSubmit}/>\n        <PaymentMethod method=\"qrcode\" post={formSubmit}/>\n        <PaymentMethod method=\"banktransfer\" post={formSubmit}/>\n        <PaymentMethod method=\"cheque\" post={formSubmit}/>\n        <PaymentMethod method=\"monthly\" post={formSubmit}/>\n\n        {/* <PaymentMethod */}\n        {/*   title=\"PayNow with UEN\" */}\n        {/*   formId=\"paynow\" */}\n        {/*   customValidation={{ */}\n        {/*     amount: Yup.number() */}\n        {/*     .typeError(\"Invalid donation amount\") */}\n        {/*     .positive(\"Invalid mobile number\") */}\n        {/*     .required(\"Required\"), */}\n        {/*   }} */}\n        {/*   renderFormFields={(formik) => ( */}\n        {/*     <FormTextField */}\n        {/*       id={\"amount\"} */}\n        {/*       label={\"Donation Amount\"} */}\n        {/*       formik={formik} */}\n        {/*     /> */}\n        {/*   )} */}\n        {/*   onSubmit={(values) => { */}\n        {/*     return fetchFromFormServer(values) */}\n        {/*       .then((res) => res.text()) */}\n        {/*       .then((res) => { */}\n        {/*         return { refid: res }; */}\n        {/*       }); */}\n        {/*   }} */}\n        {/*   renderOnSubmit={(renderData) => { */}\n        {/*     return <OnPayNowSubmit refid={renderData.refid} />; */}\n        {/*   }} */}\n        {/*   isLoading={setLoading} */}\n        {/* /> */}\n        {/* <PaymentMethod */}\n        {/*   title=\"PayLah/PayAnyone with QR Code\" */}\n        {/*   formId=\"qrcode\" */}\n        {/*   customValidation={{ */}\n        {/*     amount: Yup.number() */}\n        {/*     .typeError(\"Invalid donation amount\") */}\n        {/*     .positive(\"Invalid mobile number\") */}\n        {/*     .required(\"Required\"), */}\n        {/*   }} */}\n        {/*   renderFormFields={(formik) => ( */}\n        {/*     <FormTextField */}\n        {/*       id={\"amount\"} */}\n        {/*       label={\"Donation Amount\"} */}\n        {/*       formik={formik} */}\n        {/*     /> */}\n        {/*   )} */}\n        {/*   onSubmit={(values) => { */}\n        {/*     return fetchFromFormServer(values) */}\n        {/*       .then((res) => res.text()) */}\n        {/*       .then((res) => { */}\n        {/*         return { refid: res }; */}\n        {/*       }); */}\n        {/*   }} */}\n        {/*   renderOnSubmit={(renderData) => { */}\n        {/*     return <OnQRCodeSubmit refid={renderData.refid} />; */}\n        {/*   }} */}\n        {/*   isLoading={setLoading} */}\n        {/* /> */}\n        {/* <PaymentMethod */}\n        {/*   title=\"Credit Card Payment\" */}\n        {/*   formId=\"creditcard\" */}\n        {/*   customValidation={{ */}\n        {/*     amount: Yup.number() */}\n        {/*     .typeError(\"Invalid donation amount\") */}\n        {/*     .positive(\"Invalid mobile number\") */}\n        {/*     .required(\"Required\"), */}\n        {/*   }} */}\n        {/*   renderFormFields={(formik) => ( */}\n        {/*     <> */}\n        {/*       <FormTextField */}\n        {/*         id={\"amount\"} */}\n        {/*         label={\"Donation Amount\"} */}\n        {/*         formik={formik} */}\n        {/*       /> */}\n        {/*       <CardElement /> */}\n        {/*     </> */}\n        {/*   )} */}\n        {/*   onSubmit={async (values) => { */}\n        {/*     if (!stripe || !elements) { */}\n        {/*       return Promise.reject(\"Error. Please try again.\"); */}\n        {/*     } */}\n\n        {/*     const clientSecret = await getClientSecret(values.amount); */}\n        {/*     const result = await stripe.confirmCardPayment(clientSecret, { */}\n        {/*       payment_method: { */}\n        {/*         card: elements.getElement(CardElement), */}\n        {/*         billing_details: { */}\n        {/*           name: \"Jenny Rosen\", */}\n        {/*         }, */}\n        {/*       }, */}\n        {/*     }); */}\n        {/*     if (result.error) { */}\n        {/*       // Show error to your customer (e.g., insufficient funds) */}\n        {/*       alert(\"Strip processing error: \" + result.error.message); */}\n        {/*     } else { */}\n        {/*       // The payment has been processed! */}\n        {/*       if (result.paymentIntent.status === \"succeeded\") { */}\n        {/*         // Show a success message to your customer */}\n        {/*         // There's a risk of the customer closing the window before callback */}\n        {/*         // execution. Set up a webhook or plugin to listen for the */}\n        {/*         // payment_intent.succeeded event that handles any business critical */}\n        {/*         // post-payment actions. */}\n        {/*         return Promise.resolve({ succeeded: true }); */}\n        {/*       } */}\n        {/*     } */}\n        {/*   }} */}\n        {/*   renderOnSubmit={(renderData) => { */}\n        {/*     return <div>renderData.succeeded</div>; */}\n        {/*   }} */}\n        {/*   isLoading={setLoading} */}\n        {/* /> */}\n\n\n        {/* <PayNow */}\n        {/*   classes={classes} */}\n        {/*   formikInitialValues={{ */}\n        {/*     ...formikInitialValues, */}\n        {/*     type: \"paynow\" */}\n        {/*   }} */}\n        {/*   formikValidation={formikValidation} */}\n        {/*   fetchFromFormServer={fetchFromFormServer} */}\n        {/* /> */}\n\n        {/* <QRCode */}\n        {/*   classes={classes} */}\n        {/*   formikInitialValues={{ */}\n        {/*     ...formikInitialValues, */}\n        {/*     type: \"qrcode\" */}\n        {/*   }} */}\n        {/*   formikValidation={formikValidation} */}\n        {/*   fetchFromFormServer={fetchFromFormServer} */}\n        {/* /> */}\n\n        {/* <CreditCard classes={classes} /> */}\n\n        {/* <BankTransfer */}\n        {/*   classes={classes} */}\n        {/*   formikInitialValues={{ */}\n        {/*     ...formikInitialValues, */}\n        {/*     type: \"banktransfer\" */}\n        {/*   }} */}\n        {/*   formikValidation={formikValidation} */}\n        {/*   fetchFromFormServer={fetchFromFormServer} */}\n        {/* /> */}\n\n        {/* <Cheque */}\n        {/*   classes={classes} */}\n        {/*   formikInitialValues={{ */}\n        {/*     ...formikInitialValues, */}\n        {/*     type: \"cheque\" */}\n        {/*   }} */}\n        {/*   formikValidation={formikValidation} */}\n        {/*   fetchFromFormServer={fetchFromFormServer} */}\n        {/* /> */}\n\n        {/* <Monthly */}\n        {/*   classes={classes} */}\n        {/*   formikInitialValues={{ */}\n        {/*     ...formikInitialValues, */}\n        {/*     type: \"monthly\" */}\n        {/*   }} */}\n        {/*   formikValidation={formikValidation} */}\n        {/*   fetchFromFormServer={fetchFromFormServer} */}\n        {/* /> */}\n\n      </Container>\n  );\n}\nexport default App;\n","/root/gvh-donation-front-end/src/reportWebVitals.js",[],"/root/gvh-donation-front-end/src/payment-methods/PaymentMethod.js",["92","93","94","95","96","97"],"/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\n\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport {\n  FormTextField,\n  FormSelection,\n} from \"../form-components/FormComponents\";\nimport {ResponseContainer} from \"./StyledComponents\";\nimport { formComponentsStyles } from \"../form-components/FormComponents\";\n\n//Components displayed on submission complete.\nimport OnPayNowSubmit from \"../on-submit-components/OnPayNowSubmit\";\nimport OnQRCodeSubmit from \"../on-submit-components/OnQRCodeSubmit\";\nimport OnBankTransferSubmit from \"../on-submit-components/OnBankTransferSubmit\";\nimport OnChequeSubmit from \"../on-submit-components/OnChequeSubmit\";\nimport OnMonthlySubmit from \"../on-submit-components/OnMonthlySubmit\";\n\nimport PDPA from \"../form-components/PDPA\";\n\nimport { useTheme } from \"@mui/styles\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport AccordionActions from \"@mui/material/AccordionActions\";\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport HelpIcon from '@mui/icons-material/Help';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport { Container } from '@mui/material';\n\n// import HelpIcon from '@mui/icons-material/Help';\n\nimport {formikInitialValues, formikValidation, formComponents} from \"./fieldConstants\"\n\n\nconst configs = {\n  paynow: {\n    title:  \"PayNow with UEN\",\n    fields: [\"fullname\", \"email\", \"mobilenumber\", \"project\", \"amount\"],\n    response: (renderData) => <OnPayNowSubmit refid={renderData.refid} />\n  },\n  qrcode: {\n    title:\"PayLah/PayAnyone with QR Code\",\n    fields: [\"fullname\", \"email\", \"mobilenumber\", \"project\", \"amount\"],\n    response: (renderData) => <OnQRCodeSubmit qrUrl={renderData.qrUrl} refid={renderData.refid} />\n  }, \n  banktransfer: {\n    title:\"Bank Transfer\",\n    fields: [\"fullname\", \"email\", \"mobilenumber\", \"project\", \"amount\"],\n    response: (renderData) => <OnBankTransferSubmit refid={renderData.refid} />\n  }, \n  cheque: {\n    title:\"Cheque\",\n    fields: [\"fullname\", \"email\", \"mobilenumber\", \"project\", \"amount\", \"chequenumber\"],\n    response: (renderData) => <OnChequeSubmit refid={renderData.refid} />\n  },\n  monthly: {\n    title:\"Automatic Monthly Donation\",\n    fields: [\"fullname\", \"email\", \"mobilenumber\", \"project\", \"amount\"],\n    response: (renderData) => <OnMonthlySubmit refid={renderData.refid} />\n  },\n  paynowpaintings: {\n    title:  \"PayNow with UEN\",\n    fields: [\"fullname\", \"email\", \"mobilenumber\", \"amount\"],\n    response: (renderData) => <OnPayNowSubmit refid={renderData.refid} />\n  },\n  qrcodepaintings: {\n    title:\"PayLah/PayAnyone with QR Code\",\n    fields: [\"fullname\", \"email\", \"mobilenumber\", \"amount\"],\n    response: (renderData) => <OnQRCodeSubmit qrUrl={renderData.qrUrl} refid={renderData.refid} />\n  } \n}\n\nconst containerStyles = {\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n};\n\nfunction PaymentMethod({ method, post}) {\n  const [submitted, setSubmitted] = useState(false);\n  const [renderData, setRenderData] = useState(null);\n  const config = configs[method]\n  const theme = useTheme();\n\n  const formik = useFormik({\n    initialValues: {...formikInitialValues, type: method},\n    validationSchema: Yup.object({\n      ...formikValidation.validationObj(config.fields),\n    }),\n    onSubmit: (values) => {\n      post(values)\n        .then(renderData => {\n          setRenderData(renderData);\n          setSubmitted(true);\n          formik.setSubmitting(false);\n        })\n        .catch((err) => {\n          alert(\"My client error: \" + err);\n        });\n    }\n  });\n\n  return (\n    <Accordion css={{ zIndex: 1 }}> \n      <AccordionSummary expandIcon={<ExpandMoreIcon />} id=\"panel1a-header\"> \n        <Typography variant=\"h6\">{config.title}</Typography> \n        <Typography variant=\"subtitle1\"></Typography>\n      </AccordionSummary> \n      <Divider /> \n     <AccordionDetails> \n        {submitted === false && (\n          <ResponseContainer maxWidth=\"xs\"  as=\"form\" onSubmit={formik.handleSubmit} id={method}>\n\n            {config.fields.map(field => {\n              return formComponents(field, formik)\n            })}\n\n            <input type=\"hidden\" id=\"type\" {...formik.getFieldProps('type')} />\n\n          </ResponseContainer>\n        )}\n\n        {submitted === true && config.response(renderData)}\n        {/* {config.response({refid: \"111\", qrUrl: \"www.google.com\"})} */}\n       </AccordionDetails>\n\n      {submitted === false && (\n         <AccordionActions>\n          <ResponseContainer maxWidth=\"xs\">\n            <Tooltip title=\"Information from the form will allow us to record the source of the funds accurately and use them for their intended purpose. Your information will not be published publicly without your permission and your identity will be kept confidential.\" arrow placement=\"top\">\n              <Typography variant=\"body2\">\n                <IconButton>\n                  <HelpIcon />\n                </IconButton>\n                Why do we need this information?\n              </Typography>\n            </Tooltip>\n            <Button\n              css={{marginBottom: theme.spacing(3)}}\n              fullWidth\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"primary\"\n              type=\"submit\"\n              disabled={formik.isSubmitting}\n              form={method}\n            >\n              Submit\n            </Button>\n            <PDPA />\n          </ResponseContainer>\n         </AccordionActions>\n      )}\n      <Backdrop\n        css={{\n          color: \"#fff\",\n          zIndex: 3,\n        }}\n        open={formik.isSubmitting}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n     </Accordion>\n  );\n}\n\n\n\nexport default PaymentMethod;\n","/root/gvh-donation-front-end/src/form-components/FormComponents.js",["98","99","100"],"/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\n\nimport { useTheme } from \"@mui/styles\";\n\nimport TextField from \"@mui/material/TextField\";\nimport Select from \"@mui/material/Select\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\n\nexport const formComponentsStyles = function (theme) {\n  return {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"40%\",\n   },\n    [theme.breakpoints.down(\"sm\")]: {\n     width: \"80%\",\n    },\n  };\n};\n\nexport function FormTextField({ id, label, type, formik }) {\n  const theme = useTheme();\n  return (\n    <TextField\n      fullWidth\n      type={type}\n      id={id}\n      {...formik.getFieldProps(id)}\n      label={label}\n      variant=\"filled\"\n      margin=\"none\"\n      error={formik.touched[id] && formik.errors[id] ? true : false}\n      helperText={\n        formik.touched[id] && formik.errors[id] ? formik.errors[id] : \" \"\n      }\n    />\n  );\n}\n\nexport function FormSelection({ id, label, formik, optionValues }) {\n  const theme = useTheme();\n  return (\n    <FormControl\n      fullWidth\n      variant=\"filled\"\n      margin=\"none\"\n      error={formik.touched.project && formik.errors.project ? true : false}\n    >\n      <InputLabel id={id}>{label}</InputLabel>\n      <Select labelId={id} id={id} {...formik.getFieldProps(id)}>\n        <MenuItem value=\"\">\n          <em>None</em>\n        </MenuItem>\n        {optionValues.map((value) => (\n          <MenuItem value={value}>{value}</MenuItem>\n        ))}\n      </Select>\n      {formik.touched.project && formik.errors[id] ? (\n        <FormHelperText>{formik.errors[id]}</FormHelperText>\n      ) : (\n        <FormHelperText> </FormHelperText>\n      )}\n    </FormControl>\n  );\n}\n","/root/gvh-donation-front-end/src/Preamble.js",["101"],"/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { useTheme } from \"@mui/styles\";\n\nfunction Preamble() {\n  const theme = useTheme();\n  return (\n    <>\n      {/* <Typography variant=\"h6\"> */}\n      {/*   1. Select payment method from below <br/> */}\n      {/*   2. Complete the attached form <br/> */}\n      {/*   <Typography variant=\"caption\"> */}\n      {/*   Information from the form will allow us to record the source of the funds */}\n      {/*   accurately and use them for their intended purpose. <br /> */}\n      {/*   Your information will not be published publicly without your permission */}\n      {/*   and your identity will be kept confidential. <br /> */}\n      {/*   <br /> */}\n      {/*   </Typography> */}\n\n      {/*   3. Follow the instructions displayed when the form is submitted */}\n\n      {/*   Submission of the form only indicates intention to donate. */} \n      {/*   You will receive an email from us confirming your intention, */}\n      {/*   and a second email to confirm donation when we successfully receive your donation. */}\n      {/* </Typography> */}\n      <Typography\n        variant=\"body1\"\n        css={{ color: theme.palette.text.secondary }}\n        gutterBottom\n      >\n        Thank you so much for your interest in funding our various projects!\n        <br />\n        <br />\n        This information will allow us to record the source of the funds\n        accurately and use them for their intended purpose. <br />\n        Your information will not be published publicly without your permission\n        and your identity will be kept confidential. <br />\n        <br />\n        Feel free to email us at{\" \"}\n        <a\n          css={{\n            textDecoration: \"none\",\n            color: \"black\",\n          }}\n          href=\"mailto:Globalvillageforhope@gmail.com\"\n        >\n          <b>Globalvillageforhope@gmail.com</b>\n        </a>{\" \"}\n        or Whatsapp us at <b css={{ color: \"black\" }}>+65 88224918</b> if you\n        would like to seek clarifications. <br />\n      </Typography>\n    </>\n  );\n}\nexport default Preamble;\n","/root/gvh-donation-front-end/src/payment-methods/StyledComponents.js",["102","103","104"],"/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { Container } from '@mui/material';\n\nimport styled from \"@emotion/styled\";\n\nconst CenteredContainer= styled(Container)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n})\n\nexport function ResponseContainer(props) {\n  return <CenteredContainer {...props} />;\n}\n\n\nexport const LeftColText= styled.td({\n    textAlign: \"right\",\n    fontWeight: \"bold\"\n})\n","/root/gvh-donation-front-end/src/form-components/PDPA.js",["105","106","107"],"/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { formComponentsStyles } from \"./FormComponents\";\n\nimport { useTheme } from \"@mui/styles\";\n\nfunction PDPA() {\n  const theme = useTheme();\n\n  return (\n    <Typography color='text.secondary' variant=\"body2\">\n      By submitting this donation form, you agree that GVH may collect, use, and\n      disclose your personal data, as provided above, for the following purposes:\n      (a) contact you for volunteering activities\n      (b) send you information\n      on other events that GVH believes might be of interest or benefit to you,\n      in accordance with the Personal Data Protection Act 2012.\n    </Typography>\n  );\n}\n\nexport default PDPA;\n","/root/gvh-donation-front-end/src/payment-methods/fieldConstants.js",[],"/root/gvh-donation-front-end/src/on-submit-components/OnPayNowSubmit.js",["108","109"],"/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport {ResponseContainer} from \"../payment-methods/StyledComponents\";\n\nimport { useTheme } from \"@mui/styles\";\nimport {strings} from  \"./stringConstants\"\nconst {gvhUEN, pleaseCheckEmail} = strings\n\nfunction OnPayNowSubmit({ refid }) {\n  const theme = useTheme()\n  return (\n    <ResponseContainer maxWidth=\"xs\">\n      <Typography variant=\"h6\">Here is your Reference ID :</Typography>\n      <Typography variant=\"h3\" mb={3}>\n        {refid}\n      </Typography>\n\n      <Typography variant=\"h6\">Global Village for Hope UEN:</Typography>\n      <Typography variant=\"h3\"  mb={3}>\n        {gvhUEN}\n      </Typography>\n\n      <Typography variant=\"body1\">\n        Input the above UEN in your online banking app to transfer your donation. Under the reference number field, please key in the above reference ID. See the below screenshot for an example. \n    <br/>\n    <br/>\n        Banks that support PayNow through UEN include <b>Citibank, DBS/POSB, HSBC, Maybank, OCBC, Standard Chartered and UOB</b>.\n      </Typography>\n\n      <img\n        css={{margin: theme.spacing(3)}}\n        alt=\"\"\n        height=\"auto\"\n        width=\"60%\"\n        src={process.env.NODE_ENV === \"development\" ?\n      process.env.REACT_APP_DEV_SERVER + \"/uenscreenshot.png\" : \n      process.env.REACT_APP_PROD_SERVER + \"/uenscreenshot.png\"} />\n\n      <Typography variant=\"body1\">\n        {pleaseCheckEmail}\n      </Typography>\n    </ResponseContainer>\n  );\n}\n\nexport default OnPayNowSubmit;\n","/root/gvh-donation-front-end/src/on-submit-components/OnQRCodeSubmit.js",["110","111","112","113"],"/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\n\nimport React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\n\n// import {Container, containerCss} from \"../payment-methods/StyledComponents\";\nimport {ResponseContainer} from \"../payment-methods/StyledComponents\";\nimport paynowapps from \"./paynowapps.png\";\n\nimport { formComponentsStyles } from \"../form-components/FormComponents\";\nimport { useTheme } from \"@mui/styles\";\n\nimport {strings} from  \"./stringConstants\"\nconst {pleaseCheckEmail} = strings\n\nfunction OnQRCodeSubmit({ refid, qrUrl }) {\n const theme = useTheme();\n  return (\n    <ResponseContainer maxWidth=\"xs\">\n\n        <Typography variant=\"body1\">\n          Using any of the following banking apps, scan the QR code below, then key in your donation amount. In case you are using your phone, take a screenshot of the QR code and upload it within your banking app.\n        </Typography>\n\n        <img src={paynowapps} width=\"60%\" css={{marginTop: theme.spacing(3)}} alt=\"\"></img>\n        <img src={qrUrl} width=\"60%\" css={{marginBottom: theme.spacing(3)}} alt=\"\"></img>\n\n        <Typography variant=\"body1\">\n          {pleaseCheckEmail}\n        </Typography>\n\n    </ResponseContainer>\n  );\n}\n\nexport default OnQRCodeSubmit;\n","/root/gvh-donation-front-end/src/on-submit-components/OnBankTransferSubmit.js",["114","115","116"],"/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\n\nimport React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\n\nimport {ResponseContainer} from \"../payment-methods/StyledComponents\";\nimport {LeftColText} from \"../payment-methods/StyledComponents\";\n\nimport {strings} from  \"./stringConstants\"\nconst {pleaseCheckEmail} = strings\n\nfunction OnBankTransferSubmit({ refid }) {\n  return (\n      <ResponseContainer maxWidth=\"xs\">\n\n          <Typography variant=\"h6\">Here is your Reference ID :</Typography>\n          <Typography variant=\"h3\" mb={3}>\n              {refid}\n          </Typography>\n\n          <Typography variant=\"body1\" mb={3}>\n              Please input the above reference ID under the comments or reference number field of your bank transfer.\n          </Typography>\n\n          <table>\n              <tr>\n                  <LeftColText>\n                      Bank Name:\n                  </LeftColText>\n                  <td>\n                      United Overseas Bank Limited\n                  </td>\n              </tr>\n              <tr>\n                  <LeftColText>\n                      Account Name:\n                  </LeftColText>\n                  <td>\n                      Global Village for Hope\n                  </td>\n              </tr>\n              <tr>\n                  <LeftColText >\n                      Account Number:\n                  </LeftColText>\n                  <td>\n                      324-310-964-5\n                  </td>\n              </tr>\n              <tr>\n                  <LeftColText >\n                      Bank Code:\n                  </LeftColText>\n                  <td>\n                      7375\n                  </td>\n              </tr>\n              <tr>\n                  <LeftColText>\n                      Branch Code:\n                  </LeftColText>\n                  <td>\n                      012 (Bukit Panjang Branch)\n                  </td>\n              </tr>\n          </table>\n\n\n          <Typography variant=\"body1\" mt={3}>\n              <b>Additional Information for Overseas Transfers</b>\n          </Typography>\n          <table>\n              <tr>\n                  <LeftColText>\n                      Currency:\n                  </LeftColText>\n                  <td>\n                      SGD\n                  </td>\n              </tr>\n              <tr>\n                  <LeftColText>\n                      Country:\n                  </LeftColText>\n                  <td>\n                      Singapore\n                  </td>\n              </tr>\n              <tr>\n                  <LeftColText >\n                      Bank Address:\n                  </LeftColText>\n                  <td>\n                      UOB Plaza, 80 Raffles Place\n                  </td>\n              </tr>\n              <tr>\n                  <td></td>\n                  <td>Singapore, 048624</td>\n              </tr>\n              <tr>\n                  <LeftColText >\n                      Bank Swift Code:\n                  </LeftColText>\n                  <td>\n                      UOVBSGSG\n                  </td>\n              </tr>\n          </table>\n\n        <Typography variant=\"body1\" mt={3}>\n          {pleaseCheckEmail}\n        </Typography>\n\n      </ResponseContainer>\n  );\n}\n\nexport default OnBankTransferSubmit;\n","/root/gvh-donation-front-end/src/on-submit-components/OnChequeSubmit.js",["117"],"import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\n\nimport {ResponseContainer} from \"../payment-methods/StyledComponents\";\n\nfunction OnChequeSubmit({ refid }) {\n  return (\n    <ResponseContainer maxWidth=\"xs\">\n      <Typography >\n        Kindly drop the cheque off at any UOB Branch and include the GVH account number <b>(324-310-964-5)</b> on the back of the cheque.\n      </Typography>\n    </ResponseContainer>\n  );\n}\n\nexport default  OnChequeSubmit;\n","/root/gvh-donation-front-end/src/on-submit-components/OnMonthlySubmit.js",["118"],"import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport {ResponseContainer} from \"../payment-methods/StyledComponents\";\nimport {LeftColText} from \"../payment-methods/StyledComponents\";\n\nfunction OnMonthlySubmit({ refid }) {\n  return (\n    <ResponseContainer maxWidth=\"xs\">\n\n      <Typography variant=\"h6\">Here is your Reference ID :</Typography>\n      <Typography variant=\"h3\" mb={3}>\n        {refid}\n      </Typography>\n\n      <Typography variant=\"body1\">\n        To make an automatic monthly donation, please follow these instructions.\n        <br /><br />\n        Using your Singapore Internet Banking Account, you can set a \"Standing Instruction\" to transfer to our UOB account on a monthly basis. In the transfer setting, please enter the above reference id in the 'Comments (Optional)' section.\n        <br /><br />\n        For 'Rice for Hope' monthly sponsorship, please set your transfer to 26th of every month.\n        <br /><br />\n        For other monthly sponsorship, please set your transfer to 15th of every month.\n        <br /><br />\n        Please refer to these links for instructions how to set up a 'Standing Order'\n        <br /><br />\n        <a\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          href=\"https://www.dbs.com.sg/personal/support/bank-local-funds-transfer-setup-recurring-funds-transfer.html\">\n          For DBS/POSB\n        </a>\n        <br/>\n        <a\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          href=\"https://www.uob.com.sg/personal/eservices/mobile/recurring-fund-transfer.page\">\n          For UOB\n        </a>\n      </Typography>\n\n      <Typography variant=\"body1\" mt={3}>\n        <b>Our Banking Details:</b>\n      </Typography>\n\n      <table>\n        <tr>\n          <LeftColText>\n            Bank Name:\n          </LeftColText>\n          <td>\n            United Overseas Bank Limited\n          </td>\n        </tr>\n        <tr>\n          <LeftColText>\n            Account Name:\n          </LeftColText>\n          <td>\n            Global Village for Hope\n          </td>\n        </tr>\n        <tr>\n          <LeftColText >\n            Account Number:\n          </LeftColText>\n          <td>\n            324-310-964-5\n          </td>\n        </tr>\n        <tr>\n          <LeftColText >\n            Bank Code:\n          </LeftColText>\n          <td>\n            7375\n          </td>\n        </tr>\n        <tr>\n          <LeftColText>\n            Branch Code:\n          </LeftColText>\n          <td>\n            012 (Bukit Panjang Branch)\n          </td>\n        </tr>\n      </table>\n\n    </ResponseContainer>\n\n  );\n}\n\nexport default   OnMonthlySubmit\n","/root/gvh-donation-front-end/src/auction/Auction.js",["119","120","121","122","123"],"/root/gvh-donation-front-end/src/on-submit-components/stringConstants.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"132","line":3,"column":16,"nodeType":"130","messageId":"131","endLine":3,"endColumn":24},{"ruleId":"128","severity":1,"message":"133","line":3,"column":26,"nodeType":"130","messageId":"131","endLine":3,"endColumn":35},{"ruleId":"128","severity":1,"message":"134","line":11,"column":10,"nodeType":"130","messageId":"131","endLine":11,"endColumn":23},{"ruleId":"128","severity":1,"message":"135","line":15,"column":8,"nodeType":"130","messageId":"131","endLine":15,"endColumn":24},{"ruleId":"128","severity":1,"message":"136","line":16,"column":8,"nodeType":"130","messageId":"131","endLine":16,"endColumn":16},{"ruleId":"128","severity":1,"message":"137","line":20,"column":34,"nodeType":"130","messageId":"131","endLine":20,"endColumn":45},{"ruleId":"128","severity":1,"message":"138","line":22,"column":13,"nodeType":"130","messageId":"131","endLine":22,"endColumn":16},{"ruleId":"128","severity":1,"message":"139","line":25,"column":7,"nodeType":"130","messageId":"131","endLine":25,"endColumn":27},{"ruleId":"128","severity":1,"message":"140","line":43,"column":10,"nodeType":"130","messageId":"131","endLine":43,"endColumn":25},{"ruleId":"128","severity":1,"message":"141","line":83,"column":9,"nodeType":"130","messageId":"131","endLine":83,"endColumn":15},{"ruleId":"128","severity":1,"message":"142","line":84,"column":9,"nodeType":"130","messageId":"131","endLine":84,"endColumn":17},{"ruleId":"128","severity":1,"message":"129","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"134","line":9,"column":3,"nodeType":"130","messageId":"131","endLine":9,"endColumn":16},{"ruleId":"128","severity":1,"message":"143","line":10,"column":3,"nodeType":"130","messageId":"131","endLine":10,"endColumn":16},{"ruleId":"128","severity":1,"message":"144","line":13,"column":10,"nodeType":"130","messageId":"131","endLine":13,"endColumn":30},{"ruleId":"128","severity":1,"message":"145","line":38,"column":10,"nodeType":"130","messageId":"131","endLine":38,"endColumn":19},{"ruleId":"128","severity":1,"message":"146","line":83,"column":7,"nodeType":"130","messageId":"131","endLine":83,"endColumn":22},{"ruleId":"128","severity":1,"message":"129","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"147","line":28,"column":9,"nodeType":"130","messageId":"131","endLine":28,"endColumn":14},{"ruleId":"128","severity":1,"message":"147","line":47,"column":9,"nodeType":"130","messageId":"131","endLine":47,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"148","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":17},{"ruleId":"128","severity":1,"message":"149","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"144","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":30},{"ruleId":"128","severity":1,"message":"147","line":10,"column":9,"nodeType":"130","messageId":"131","endLine":10,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"148","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":17},{"ruleId":"128","severity":1,"message":"129","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"150","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"148","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":17},{"ruleId":"128","severity":1,"message":"144","line":13,"column":10,"nodeType":"130","messageId":"131","endLine":13,"endColumn":30},{"ruleId":"128","severity":1,"message":"129","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"150","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"148","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":17},{"ruleId":"128","severity":1,"message":"148","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":17},{"ruleId":"128","severity":1,"message":"148","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":17},{"ruleId":"128","severity":1,"message":"129","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"148","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":17},{"ruleId":"128","severity":1,"message":"151","line":28,"column":8,"nodeType":"130","messageId":"131","endLine":28,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":222,"column":27,"nodeType":"154","endLine":222,"endColumn":101},{"ruleId":"155","severity":1,"message":"156","line":251,"column":19,"nodeType":"154","endLine":251,"endColumn":64},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'css' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'FormTextField' is defined but never used.","'CircularProgress' is defined but never used.","'Backdrop' is defined but never used.","'CardElement' is defined but never used.","'Yup' is defined but never used.","'CARD_ELEMENT_OPTIONS' is assigned a value but never used.","'getClientSecret' is defined but never used.","'stripe' is assigned a value but never used.","'elements' is assigned a value but never used.","'FormSelection' is defined but never used.","'formComponentsStyles' is defined but never used.","'Container' is defined but never used.","'containerStyles' is assigned a value but never used.","'theme' is assigned a value but never used.","'TextField' is defined but never used.","'Typography' is defined but never used.","'styled' is defined but never used.","'image1' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]